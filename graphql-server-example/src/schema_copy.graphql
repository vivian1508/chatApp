  type User {
    _id: ID!
    name: String!
    avatarUrl: String
    email: String!
  }

  type Chat {
    _id: ID!
    name: String!
    messages: [Message]!
    # participants: [User!]!
  }

  type Message {
    _id: ID!
    text: String!
    creator: [User!]!
    createTime: String!
    lastUpdateTime: String!
    chatId: ID!
  }

  # The "Query" type is special: it lists all of the available queries that
  # clients can execute, along with the return type for each.
  type Query {
    userById(email: String!): User
    users: [User]
    chatsByUser(email: String!): [Chat!]
    messagesByChatId(chatId: ID!): [Message!]
    chats: [Chat!]
  }

  type Mutation {
    createMessage(text: String!, chatId: ID!, fromEmail: String!, 
      toEmail: String!, createTime:String!, lastUpdateTime:String!): Message
  }

  type Subscription {
    newMessageAdded(chatId: ID!): Message
  }