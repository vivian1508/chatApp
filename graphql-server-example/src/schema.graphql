  type User {
    _id: ID!
    name: String!
    avatarUrl: String!
    email: String!
  }

  type Chat {
    _id: ID!
    name: String!
    avatarUrl: String!
    lastMessage: Message
  }

  type Message {
    _id: ID!
    text: String!
    creator: User!
    createTime: String!
    lastUpdateTime: String!
    chatId: ID!
    creatorId: ID!
  }

  # The "Query" type is special: it lists all of the available queries that
  # clients can execute, along with the return type for each.
  type Query {
    userById(_id: ID!): User
    users: [User]
    messagesByChatId(chatId: ID!): [Message!]
    chats: [Chat!]
  }

  type Mutation {
    createMessage(text: String!, chatId: ID!, creatorId: ID!, createTime:String!, lastUpdateTime:String!): Message
  }

  type Subscription {
    newMessageAdded(chatId: ID!): Message
  }